from aiogram import types, Router, F
from aiogram.utils.keyboard import InlineKeyboardBuilder
from pathlib import Path
import requests
import traceback
import sys
from bot import bot
from googletrans import Translator
from config import HF_API_TOKEN, HF_API_URL
from handlers.utils import google_translate_text

router = Router()# –∏–ª–∏ "tiny", "small", "medium", "large"
translator = Translator()

@router.message(F.voice)
async def handle_voice(message: types.Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≥–æ–ª–æ—Å–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π"""
    try:
        # –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
        temp_dir = Path("temp_voice")
        temp_dir.mkdir(exist_ok=True)
        
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≥–æ–ª–æ—Å–æ–≤–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏
        voice = message.voice
        file_id = voice.file_id
        
        # –ü—É—Ç–∏ –∫ –≤—Ä–µ–º–µ–Ω–Ω—ã–º —Ñ–∞–π–ª–∞–º
        ogg_path = temp_dir / f"{file_id}.ogg"
        mp3_path = temp_dir / f"{file_id}.mp3"
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –Ω–∞—á–∞–ª–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏
        processing_msg = await message.reply("üéß –û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ...")
        
        try:
            # –°–∫–∞—á–∏–≤–∞–µ–º —Ñ–∞–π–ª
            file_id = voice.file_id

            # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ñ–∞–π–ª–µ
            file_info = await bot.get_file(file_id)
            file_path = file_info.file_path

            # –°–∫–∞—á–∏–≤–∞–µ–º —Ñ–∞–π–ª
            downloaded_file = await bot.download_file(file_path)
            save_path = ogg_path
            
            with open(save_path, "wb") as new_file:
                new_file.write(downloaded_file.read())
            
            audio_file_path = ogg_path

            # Function to send audio to the API
            def transcribe_audio(api_token, api_url, audio_file):
                with open(audio_file, "rb") as f:
                    url = "https://api-inference.huggingface.co/models/openai/whisper-large-v3-turbo"
                    payload = f
                    headers = {
                    'Authorization': f'Bearer {HF_API_TOKEN}',
                    'Content-Type': 'audio/ogg'
                    }

                    response = requests.request("POST", url, headers=headers, data=payload)
                return response.json()

            # Transcribe the audio
            result = transcribe_audio(HF_API_TOKEN, HF_API_URL, audio_file_path)

            # Print the transcription
            if "text" in result:
                print("Transcription:", result["text"])
            else:
                print("Error:", result)
            
            transcribed_text = result["text"]

            result = await google_translate_text(transcribed_text)
            
            # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —ç–º–æ–¥–∑–∏ –∏ —Ç–µ–∫—Å—Ç –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–µ—Ä–µ–≤–æ–¥–∞
            direction = "üá∑üá∫ ‚Üí üá¨üáß" if result[2] == 'en' else "üá¨üáß ‚Üí üá∑üá∫"
            
            # –§–æ—Ä–º–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç
            response = (
                f"üé§ –†–∞—Å–ø–æ–∑–Ω–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç:\n{transcribed_text}\n\n"
                f"üîÑ –ü–µ—Ä–µ–≤–æ–¥ {direction}:\n<code>{result[0]}</code>"
            )
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
            await processing_msg.edit_text(
                response
            )
            
        finally:
            # –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
            if ogg_path.exists():
                ogg_path.unlink()
            if mp3_path.exists():
                mp3_path.unlink()
        
    except Exception as e:
        # –í—ã–≤–æ–¥–∏–º –ø–æ–¥—Ä–æ–±–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –æ—à–∏–±–∫–µ –≤ –∫–æ–Ω—Å–æ–ª—å
        print("\n" + "="*50 + " VOICE PROCESSING ERROR " + "="*50, file=sys.stderr)
        print(f"Error: {str(e)}", file=sys.stderr)
        print("\nTraceback:", file=sys.stderr)
        print(traceback.format_exc(), file=sys.stderr)
        print("="*116 + "\n", file=sys.stderr)
        
        await message.reply(
            "üòî –ò–∑–≤–∏–Ω–∏—Ç–µ, –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è. "
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
        )
